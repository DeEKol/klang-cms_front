/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/lesson/find/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["LessonApiController_findOne"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lesson/delete/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["LessonApiController_deleteOne"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lesson/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["LessonApiController_update"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lesson/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["LessonApiController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/page/delete/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["PageApiController_deletePage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/page/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["PageApiController_updatePage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/page/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["PageApiController_createPage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/section/find/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["SectionApiController_findOne"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/section/delete/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["SectionApiController_deleteOne"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/section/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["SectionApiController_update"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/section/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["SectionApiController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LessonUpdateRequest: {
            /**
             * @description uuid
             * @example 48709c63-458e-4f90-8c39-577416a790f2
             */
            id: string;
            /**
             * @description Lesson text
             * @example Lesson one
             */
            text: string;
        };
        LessonRequest: {
            /**
             * @description Lesson text
             * @example Lesson one
             */
            text: string;
        };
        PageResponse: {
            /**
             * @description uuid
             * @example 48709c63-458e-4f90-8c39-577416a790f2
             */
            id: string;
            /**
             * @description Page text
             * @example Page one
             */
            text: string;
            /**
             * @description Page number
             * @example 1
             */
            pageNumber: number;
        };
        LessonResponse: {
            /** @example 48709c63-458e-4f90-8c39-577416a790f2 */
            id: string;
            /** @example Lesson one */
            text: string;
            pages: components["schemas"]["PageResponse"][];
        };
        PageUpdateRequest: {
            /**
             * @description uuid
             * @example 48709c63-458e-4f90-8c39-577416a790f2
             */
            id: string;
            /**
             * @description Page text
             * @example Page one
             */
            text?: string;
            /**
             * @description uuid
             * @example 4a2f7cce-548e-49d6-af56-c86f6f5a4e8d
             */
            lessonId?: string;
            /**
             * @description Page number
             * @example 1
             */
            pageNumber?: number;
        };
        PageCreateRequest: {
            /**
             * @description Page text
             * @example Page one
             */
            text: string;
            /**
             * @description uuid
             * @example 4a2f7cce-548e-49d6-af56-c86f6f5a4e8d
             */
            lessonId: string;
            /**
             * @description Page number
             * @example 1
             */
            pageNumber: number;
        };
        SectionResponse: {
            /**
             * @description uuid
             * @example 48709c63-458e-4f90-8c39-577416a790f2
             */
            id: string;
            /**
             * @description Section text
             * @example Section one
             */
            text: string;
        };
        SectionUpdateRequest: {
            /**
             * @description uuid
             * @example 48709c63-458e-4f90-8c39-577416a790f2
             */
            id: string;
            /**
             * @description Section text
             * @example Section one
             */
            text: string;
        };
        SectionCreateRequest: {
            /**
             * @description Section text
             * @example Section one
             */
            text: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    LessonApiController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get one */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonResponse"] | null;
                };
            };
        };
    };
    LessonApiController_deleteOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Delete one */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    LessonApiController_update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LessonUpdateRequest"];
            };
        };
        responses: {
            /** @description Update */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    LessonApiController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LessonRequest"];
            };
        };
        responses: {
            /** @description Create */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonResponse"];
                };
            };
        };
    };
    PageApiController_deletePage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description uuid */
                lessonId: string;
                /** @description Page number */
                pageNumber: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Delete one page */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    PageApiController_updatePage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageUpdateRequest"];
            };
        };
        responses: {
            /** @description Update */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    PageApiController_createPage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageCreateRequest"];
            };
        };
        responses: {
            /** @description Create */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PageResponse"];
                };
            };
        };
    };
    SectionApiController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get one */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SectionResponse"];
                };
            };
        };
    };
    SectionApiController_deleteOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Delete one */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    SectionApiController_update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SectionUpdateRequest"];
            };
        };
        responses: {
            /** @description Update */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
        };
    };
    SectionApiController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SectionCreateRequest"];
            };
        };
        responses: {
            /** @description Create */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SectionResponse"];
                };
            };
        };
    };
}
